module FastDevNetInit where

import Daml.Script
import DA.Time
import qualified Token.Token as T
import qualified AMM.Pool as P

fastInit : Script ()
fastInit = script do
  -- Allocate parties for DevNet pool creation (deterministic with hash e708888a)
  poolOp <- allocateParty "FINAL_OP"
  poolParty <- allocateParty "FINAL_POOL"
  ethIss <- allocateParty "FINAL_ETH"
  usdcIss <- allocateParty "FINAL_USDC"
  lpIss <- allocateParty "FINAL_LP"
  clx <- allocateParty "FINAL_CLX"

  eth <- submit ethIss $ createCmd T.Token with
    issuer = ethIss
    owner = poolParty
    symbol = "ETH"
    amount = 100.0

  usdc <- submit usdcIss $ createCmd T.Token with
    issuer = usdcIss
    owner = poolParty
    symbol = "USDC"
    amount = 200000.0

  submitMulti [poolParty, poolOp] [] $ createCmd P.Pool with
    poolOperator = poolOp
    poolParty = poolParty
    lpIssuer = lpIss
    issuerA = ethIss
    issuerB = usdcIss
    symbolA = "ETH"
    symbolB = "USDC"
    feeBps = 30
    poolId = "eth-usdc-final"
    maxTTL = hours 24
    totalLPSupply = 0.0
    reserveA = 100.0
    reserveB = 200000.0
    tokenACid = Some eth
    tokenBCid = Some usdc
    protocolFeeReceiver = clx
    maxInBps = 10000
    maxOutBps = 5000

  debug "âœ“ Pool created on DevNet!"
  pure ()
