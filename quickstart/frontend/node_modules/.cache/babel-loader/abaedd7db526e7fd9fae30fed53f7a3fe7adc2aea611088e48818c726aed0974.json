{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// Canton Queries - Uses Backend API\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { backendApi } from '../services/backendApi';\nimport { cantonApi } from '../services/cantonApi';\nexport const useCantonHealth = () => {\n  _s();\n  return useQuery({\n    queryKey: ['canton-health'],\n    queryFn: () => cantonApi.getHealth(),\n    refetchInterval: 5000\n  });\n};\n_s(useCantonHealth, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useTokens = party => {\n  _s2();\n  return useQuery({\n    queryKey: ['tokens', party],\n    queryFn: () => backendApi.getTokens(party || 'alice@clearportx')\n  });\n};\n_s2(useTokens, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const usePools = () => {\n  _s3();\n  return useQuery({\n    queryKey: ['pools'],\n    queryFn: () => backendApi.getPools()\n  });\n};\n_s3(usePools, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSwapQuote = params => {\n  _s4();\n  return useQuery({\n    queryKey: ['swap-quote', params],\n    queryFn: () => backendApi.calculateSwapQuote(params),\n    enabled: !!params && !!params.poolId && !!params.inputAmount\n  });\n};\n_s4(useSwapQuote, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSwapMutation = () => {\n  _s5();\n  return useMutation({\n    mutationFn: params => backendApi.executeAtomicSwap(params)\n  });\n};\n_s5(useSwapMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","backendApi","cantonApi","useCantonHealth","_s","queryKey","queryFn","getHealth","refetchInterval","useTokens","party","_s2","getTokens","usePools","_s3","getPools","useSwapQuote","params","_s4","calculateSwapQuote","enabled","poolId","inputAmount","useSwapMutation","_s5","mutationFn","executeAtomicSwap"],"sources":["/root/canton-website/app/src/hooks/useCantonQueries.ts"],"sourcesContent":["// Canton Queries - Uses Backend API\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { backendApi } from '../services/backendApi';\nimport { cantonApi } from '../services/cantonApi';\n\nexport const useCantonHealth = () => {\n  return useQuery({\n    queryKey: ['canton-health'],\n    queryFn: () => cantonApi.getHealth(),\n    refetchInterval: 5000,\n  });\n};\n\nexport const useTokens = (party?: string) => {\n  return useQuery({\n    queryKey: ['tokens', party],\n    queryFn: () => backendApi.getTokens(party || 'alice@clearportx'),\n  });\n};\n\nexport const usePools = () => {\n  return useQuery({\n    queryKey: ['pools'],\n    queryFn: () => backendApi.getPools(),\n  });\n};\n\nexport const useSwapQuote = (params: any) => {\n  return useQuery({\n    queryKey: ['swap-quote', params],\n    queryFn: () => backendApi.calculateSwapQuote(params),\n    enabled: !!params && !!params.poolId && !!params.inputAmount,\n  });\n};\n\nexport const useSwapMutation = () => {\n  return useMutation({\n    mutationFn: (params: any) => backendApi.executeAtomicSwap(params),\n  });\n};"],"mappings":";;;;;AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,uBAAuB;AAC7D,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,OAAOL,QAAQ,CAAC;IACdM,QAAQ,EAAE,CAAC,eAAe,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAMJ,SAAS,CAACK,SAAS,CAAC,CAAC;IACpCC,eAAe,EAAE;EACnB,CAAC,CAAC;AACJ,CAAC;AAACJ,EAAA,CANWD,eAAe;EAAA,QACnBJ,QAAQ;AAAA;AAOjB,OAAO,MAAMU,SAAS,GAAIC,KAAc,IAAK;EAAAC,GAAA;EAC3C,OAAOZ,QAAQ,CAAC;IACdM,QAAQ,EAAE,CAAC,QAAQ,EAAEK,KAAK,CAAC;IAC3BJ,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACW,SAAS,CAACF,KAAK,IAAI,kBAAkB;EACjE,CAAC,CAAC;AACJ,CAAC;AAACC,GAAA,CALWF,SAAS;EAAA,QACbV,QAAQ;AAAA;AAMjB,OAAO,MAAMc,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAOf,QAAQ,CAAC;IACdM,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACc,QAAQ,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC;AAACD,GAAA,CALWD,QAAQ;EAAA,QACZd,QAAQ;AAAA;AAMjB,OAAO,MAAMiB,YAAY,GAAIC,MAAW,IAAK;EAAAC,GAAA;EAC3C,OAAOnB,QAAQ,CAAC;IACdM,QAAQ,EAAE,CAAC,YAAY,EAAEY,MAAM,CAAC;IAChCX,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACkB,kBAAkB,CAACF,MAAM,CAAC;IACpDG,OAAO,EAAE,CAAC,CAACH,MAAM,IAAI,CAAC,CAACA,MAAM,CAACI,MAAM,IAAI,CAAC,CAACJ,MAAM,CAACK;EACnD,CAAC,CAAC;AACJ,CAAC;AAACJ,GAAA,CANWF,YAAY;EAAA,QAChBjB,QAAQ;AAAA;AAOjB,OAAO,MAAMwB,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,OAAOxB,WAAW,CAAC;IACjByB,UAAU,EAAGR,MAAW,IAAKhB,UAAU,CAACyB,iBAAiB,CAACT,MAAM;EAClE,CAAC,CAAC;AACJ,CAAC;AAACO,GAAA,CAJWD,eAAe;EAAA,QACnBvB,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}