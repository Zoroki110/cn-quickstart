version: '3.8'

services:
  # Prometheus - Collecte les métriques
  prometheus:
    image: prom/prometheus:latest
    container_name: clearportx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring

  # Grafana - Visualisation
  grafana:
    image: grafana/grafana:latest
    container_name: clearportx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=clearportx
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Node Exporter - Métriques système
  node-exporter:
    image: prom/node-exporter:latest
    container_name: clearportx-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # Canton Metrics Exporter (Custom)
  canton-metrics:
    image: python:3.9-slim
    container_name: clearportx-canton-metrics
    ports:
      - "9200:9200"
    volumes:
      - ./canton_metrics_exporter.py:/app/exporter.py
    command: python /app/exporter.py
    environment:
      - CANTON_API_URL=http://host.docker.internal:5001
      - BACKEND_API_URL=http://host.docker.internal:8080
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
