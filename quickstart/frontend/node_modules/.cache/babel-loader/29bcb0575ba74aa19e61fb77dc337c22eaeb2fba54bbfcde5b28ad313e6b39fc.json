{"ast":null,"code":"import { create } from 'zustand';\nexport const useAppStore = create((set, get) => ({\n  // Theme\n  theme: 'light',\n  setTheme: theme => set({\n    theme\n  }),\n  // Connection\n  isConnected: false,\n  setConnected: isConnected => set({\n    isConnected\n  }),\n  currentParty: null,\n  setCurrentParty: currentParty => set({\n    currentParty\n  }),\n  // Tokens\n  selectedTokens: {\n    from: null,\n    to: null\n  },\n  setSelectedTokens: tokens => set(state => ({\n    selectedTokens: {\n      ...state.selectedTokens,\n      ...tokens\n    }\n  })),\n  swapTokens: () => set(state => ({\n    selectedTokens: {\n      from: state.selectedTokens.to,\n      to: state.selectedTokens.from\n    }\n  })),\n  // Settings\n  slippage: 0.5,\n  setSlippage: slippage => set({\n    slippage\n  }),\n  // Pools\n  pools: [],\n  setPools: pools => set({\n    pools\n  })\n}));","map":{"version":3,"names":["create","useAppStore","set","get","theme","setTheme","isConnected","setConnected","currentParty","setCurrentParty","selectedTokens","from","to","setSelectedTokens","tokens","state","swapTokens","slippage","setSlippage","pools","setPools"],"sources":["/root/canton-website/app/src/stores/useAppStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { TokenInfo, PoolInfo } from '../types/canton';\n\ninterface AppState {\n  // Theme\n  theme: 'light' | 'dark';\n  setTheme: (theme: 'light' | 'dark') => void;\n\n  // Connection\n  isConnected: boolean;\n  setConnected: (connected: boolean) => void;\n  currentParty: string | null;\n  setCurrentParty: (party: string | null) => void;\n\n  // Tokens\n  selectedTokens: {\n    from: TokenInfo | null;\n    to: TokenInfo | null;\n  };\n  setSelectedTokens: (tokens: { from?: TokenInfo | null; to?: TokenInfo | null }) => void;\n  swapTokens: () => void;\n\n  // Settings\n  slippage: number;\n  setSlippage: (slippage: number) => void;\n\n  // Pools\n  pools: PoolInfo[];\n  setPools: (pools: PoolInfo[]) => void;\n}\n\nexport const useAppStore = create<AppState>((set, get) => ({\n  // Theme\n  theme: 'light',\n  setTheme: (theme) => set({ theme }),\n\n  // Connection\n  isConnected: false,\n  setConnected: (isConnected) => set({ isConnected }),\n  currentParty: null,\n  setCurrentParty: (currentParty) => set({ currentParty }),\n\n  // Tokens\n  selectedTokens: {\n    from: null,\n    to: null,\n  },\n  setSelectedTokens: (tokens) =>\n    set((state) => ({\n      selectedTokens: {\n        ...state.selectedTokens,\n        ...tokens,\n      },\n    })),\n  swapTokens: () =>\n    set((state) => ({\n      selectedTokens: {\n        from: state.selectedTokens.to,\n        to: state.selectedTokens.from,\n      },\n    })),\n\n  // Settings\n  slippage: 0.5,\n  setSlippage: (slippage) => set({ slippage }),\n\n  // Pools\n  pools: [],\n  setPools: (pools) => set({ pools }),\n}));"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AA+BhC,OAAO,MAAMC,WAAW,GAAGD,MAAM,CAAW,CAACE,GAAG,EAAEC,GAAG,MAAM;EACzD;EACAC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAGD,KAAK,IAAKF,GAAG,CAAC;IAAEE;EAAM,CAAC,CAAC;EAEnC;EACAE,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAGD,WAAW,IAAKJ,GAAG,CAAC;IAAEI;EAAY,CAAC,CAAC;EACnDE,YAAY,EAAE,IAAI;EAClBC,eAAe,EAAGD,YAAY,IAAKN,GAAG,CAAC;IAAEM;EAAa,CAAC,CAAC;EAExD;EACAE,cAAc,EAAE;IACdC,IAAI,EAAE,IAAI;IACVC,EAAE,EAAE;EACN,CAAC;EACDC,iBAAiB,EAAGC,MAAM,IACxBZ,GAAG,CAAEa,KAAK,KAAM;IACdL,cAAc,EAAE;MACd,GAAGK,KAAK,CAACL,cAAc;MACvB,GAAGI;IACL;EACF,CAAC,CAAC,CAAC;EACLE,UAAU,EAAEA,CAAA,KACVd,GAAG,CAAEa,KAAK,KAAM;IACdL,cAAc,EAAE;MACdC,IAAI,EAAEI,KAAK,CAACL,cAAc,CAACE,EAAE;MAC7BA,EAAE,EAAEG,KAAK,CAACL,cAAc,CAACC;IAC3B;EACF,CAAC,CAAC,CAAC;EAEL;EACAM,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAGD,QAAQ,IAAKf,GAAG,CAAC;IAAEe;EAAS,CAAC,CAAC;EAE5C;EACAE,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAGD,KAAK,IAAKjB,GAAG,CAAC;IAAEiB;EAAM,CAAC;AACpC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}