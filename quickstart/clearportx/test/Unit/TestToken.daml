module Test.Unit.TokenTest where

import Token.Token
import AMM.LPToken
import Daml.Script

testTokenTransfer : Script ()
testTokenTransfer = script do
  -- Setup parties
  issuer <- allocateParty "Issuer"
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"
  
  -- Create initial token for Alice
  aliceToken <- submit issuer do
    createCmd Token with
      issuer = issuer
      owner = alice
      symbol = "USDC"
      amount = 1000.0
  
  -- Alice transfers 100 to Bob
  bobToken <- submit [alice, bob] do  -- Both must sign
    exerciseCmd aliceToken Transfer with
      recipient = bob
      qty = 100.0
  
  -- Verify Bob has 100
  Some bobTokenData <- queryContractId bob bobToken
  assert (bobTokenData.amount == 100.0)
  
  -- Verify Alice has 900 remaining
  Some aliceRemaining <- queryContractKey @Token alice (issuer, "USDC", alice)
  assert (aliceRemaining.amount == 900.0)
  
  pure ()

testSelfTransferFails : Script ()
testSelfTransferFails = script do
  issuer <- allocateParty "Issuer"
  alice <- allocateParty "Alice"
  
  aliceToken <- submit issuer do
    createCmd Token with
      issuer = issuer
      owner = alice
      symbol = "USDC"
      amount = 1000.0
  
  -- Self-transfer should fail
  submitMustFail [alice, alice] do
    exerciseCmd aliceToken Transfer with
      recipient = alice  -- Same as owner!
      qty = 100.0
  
  pure ()